{"version":3,"sources":["services/notes.js","components/Note.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","object","post","id","note","put","Note","toggleImportance","label","important","content","onClick","Notification","message","className","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","notesToShow","filter","map","find","n","changedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","Math","random","concat","value","onChange","console","log","target","type","ReactDOM","render","document","getElementById"],"mappings":"yLAEMA,EAAU,aAiBD,EAfA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVF,SAAAC,GAEX,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALH,SAACG,EAAGC,GAEd,OADgBR,IAAMS,IAAN,UAAaV,EAAb,YAAwBQ,GAAMC,GAC/BN,MAAK,SAAAC,GAAQ,OAAIA,EAASC,S,OCF5BM,EAZF,SAAC,GAAgC,IAA9BF,EAA6B,EAA7BA,KAAMG,EAAuB,EAAvBA,iBACdC,EAAQJ,EAAKK,UACf,qBAAuB,iBAE3B,OACE,+BACGL,EAAKM,QACN,wBAAQC,QAASJ,EAAjB,SAAoCC,QCLpCI,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAGP,qBAAKC,UAAU,QAAf,SACGD,KAKDE,EAAS,WAMb,OACE,sBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,2GAwFSC,EAnFH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,0BAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACRC,IACGjC,MAAK,SAAAC,GACJwB,EAASxB,QAEZ,IAEH,IAsCMiC,EAAcN,EAClBJ,EACAA,EAAMW,QAAO,SAAA7B,GAAI,OAAIA,EAAKK,aAE5B,OACE,gCACE,uCACA,cAAC,EAAD,CAAcI,QAASe,IACvB,8BACE,yBAAQjB,QAAS,kBAAMgB,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGM,EAAYE,KAAI,SAAA9B,GAAI,OACjB,cAAC,EAAD,CACMA,KAAMA,EACNG,iBAAkB,kBAxCP,SAAAJ,GACzB,IAAMC,EAAOkB,EAAMa,MAAK,SAAAC,GAAC,OAAIA,EAAEjC,KAAOA,KAChCkC,EAAW,2BAAQjC,GAAR,IAAcK,WAAYL,EAAKK,YAEhDsB,EAAgB5B,EAAIkC,GAAavC,MAAK,SAAAC,GACpCwB,EAASD,EAAMY,KAAI,SAAA9B,GAAI,OAAIA,EAAKD,KAAOA,EAAKC,EAAOL,SAEpDuC,OAAM,SAAAC,GACLV,EAAgB,SAAD,OACJzB,EAAKM,QADD,sCAGf8B,YAAW,WACTX,EAAgB,QACf,KACHN,EAASD,EAAMW,QAAO,SAAAG,GAAC,OAAIA,EAAEjC,KAAOA,SA0BAsC,CAAmBrC,EAAKD,MAF3CC,EAAKD,SAKtB,uBAAMuC,SA1DM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBnC,QAASc,EACTsB,KAAM,IAAIC,KACVtC,UAAWuC,KAAKC,SAAW,IAG7BlB,EAAiBc,GAChB/C,MAAK,SAAAC,GACJwB,EAASD,EAAM4B,OAAOnD,IACtB0B,EAAW,QA+CX,UACE,uBACE0B,MAAO3B,EACP4B,SA5BiB,SAACT,GACxBU,QAAQC,IAAIX,EAAMY,OAAOJ,OACzB1B,EAAWkB,EAAMY,OAAOJ,UA4BpB,wBAAQK,KAAK,SAAb,qBAEF,cAAC,EAAD,QCvGNC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.354fe875.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = \"/api/notes\"\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst post = object => {\n  const request = axios.post(baseUrl, object)\n  return request.then(response => response.data)\n}\n\nconst put = (id,note) => {\n  const request = axios.put(`${baseUrl}/${id}`, note)\n  return request.then(response => response.data)\n}\n\nexport default {\n  getAll, post, put\n}\n","import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n\n  return (\n    <li>\n      {note.content} \n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note","import React, { useState, useEffect } from 'react'\nimport noteService from './services/notes'\n\nimport Note from './components/Note.js'\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState('some error happened...')\n\n  useEffect(() => {\n    noteService.getAll()\n      .then(response => {\n        setNotes(response)\n      })\n  }, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date(),\n      important: Math.random() > 0.5,\n    }\n\n    noteService.post(noteObject)\n    .then(response => {\n      setNotes(notes.concat(response))\n      setNewNote('')\n    })\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService.put(id, changedNote).then(response => {\n      setNotes(notes.map(note => note.id !== id ? note : response))\n    })\n    .catch(error => {\n      setErrorMessage(\n        `Note '${note.content}' was already removed from server`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      setNotes(notes.filter(n => n.id !== id))\n    })\n  } \n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n  ? notes\n  : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>   \n      <ul>\n        {notesToShow.map(note => \n            <Note key={note.id} \n                  note={note}  \n                  toggleImportance={() => toggleImportanceOf(note.id)}/>\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>  \n      <Footer/>\n    </div>\n  )\n}\n\nexport default App;\n","import './index.css'\nimport ReactDOM from 'react-dom'\nimport App from './App.js'\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n)"],"sourceRoot":""}